// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RestaurantReservation.Server.Data;

#nullable disable

namespace RestaurantReservation.Server.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240111050934_new")]
    partial class @new
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Duende.IdentityServer.EntityFramework.Entities.DeviceFlowCodes", b =>
                {
                    b.Property<string>("UserCode")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ClientId")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Data")
                        .IsRequired()
                        .HasMaxLength(50000)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("DeviceCode")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("Expiration")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<string>("SessionId")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("SubjectId")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("UserCode");

                    b.HasIndex("DeviceCode")
                        .IsUnique();

                    b.HasIndex("Expiration");

                    b.ToTable("DeviceCodes", (string)null);
                });

            modelBuilder.Entity("Duende.IdentityServer.EntityFramework.Entities.Key", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Algorithm")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("Data")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("DataProtected")
                        .HasColumnType("bit");

                    b.Property<bool>("IsX509Certificate")
                        .HasColumnType("bit");

                    b.Property<string>("Use")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Version")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Use");

                    b.ToTable("Keys", (string)null);
                });

            modelBuilder.Entity("Duende.IdentityServer.EntityFramework.Entities.PersistedGrant", b =>
                {
                    b.Property<string>("Key")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ClientId")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("ConsumedTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Data")
                        .IsRequired()
                        .HasMaxLength(50000)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("Expiration")
                        .HasColumnType("datetime2");

                    b.Property<string>("SessionId")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("SubjectId")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Key");

                    b.HasIndex("ConsumedTime");

                    b.HasIndex("Expiration");

                    b.HasIndex("SubjectId", "ClientId", "Type");

                    b.HasIndex("SubjectId", "SessionId", "Type");

                    b.ToTable("PersistedGrants", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "69d41a28-6af8-47fe-aa0c-7785bd7233f5",
                            Name = "Staff",
                            NormalizedName = "STAFF"
                        },
                        new
                        {
                            Id = "f0926ab0-0927-48bb-8f5a-92a5d1acbade",
                            Name = "Customer",
                            NormalizedName = "CUSTOMER"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);

                    b.HasData(
                        new
                        {
                            UserId = "900de75c-2b44-4069-8c0d-d7d3a7ae4ffb",
                            RoleId = "69d41a28-6af8-47fe-aa0c-7785bd7233f5"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("RestaurantReservation.Server.Models.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "900de75c-2b44-4069-8c0d-d7d3a7ae4ffb",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "6f8300dc-e3f4-484a-b03d-08eff8768b91",
                            Email = "admin@localhost.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            NormalizedEmail = "ADMIN@LOCALHOST.COM",
                            NormalizedUserName = "ADMIN@LOCALHOST.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAELzu8vbaedhPylcTnzPnbJxzqdWIXYuI4WNQdy7l84z9rwoBqy9DY9OGMK0Isq+VUQ==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "1e7f6488-9f68-4ec8-a290-1c35875d24ca",
                            TwoFactorEnabled = false,
                            UserName = "admin@localhost.com"
                        });
                });

            modelBuilder.Entity("RestaurantReservation.Shared.Domain.Address", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Building")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Level")
                        .HasColumnType("int");

                    b.Property<int?>("PostalCode")
                        .HasColumnType("int");

                    b.Property<string>("Street")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UnitNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Addresses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Building = "Century Square",
                            Level = 2,
                            PostalCode = 529509,
                            Street = "2 Tampines Central 5",
                            UnitNumber = "#02-22"
                        },
                        new
                        {
                            Id = 2,
                            Building = "Parkroyal",
                            Level = 1,
                            PostalCode = 199591,
                            Street = "7500 Beach Rd"
                        },
                        new
                        {
                            Id = 3,
                            Building = "VivoCity",
                            Level = 3,
                            PostalCode = 98585,
                            Street = "1 HarbourFront Walk",
                            UnitNumber = "#03-08A"
                        },
                        new
                        {
                            Id = 4,
                            Building = "Tampines 1",
                            Level = 2,
                            PostalCode = 529536,
                            Street = " 10 Tampines Central 1",
                            UnitNumber = "#02-04"
                        },
                        new
                        {
                            Id = 5,
                            Building = "One Raffles Place",
                            Level = 4,
                            PostalCode = 48616,
                            Street = "1 Raffles Place",
                            UnitNumber = "#04-26/27/28"
                        },
                        new
                        {
                            Id = 6,
                            Building = "Oriental plaza",
                            Level = 1,
                            PostalCode = 88756,
                            Street = "291 New Bridge Rd",
                            UnitNumber = "#01-01"
                        },
                        new
                        {
                            Id = 7,
                            Building = "NTUC Income Tampines Junction",
                            Level = 1,
                            PostalCode = 529653,
                            Street = "300 Tampines Ave 5",
                            UnitNumber = "#01-06"
                        },
                        new
                        {
                            Id = 8,
                            Building = "AMK Hub",
                            Level = 4,
                            PostalCode = 569933,
                            Street = "53 Ang Mo Kio Ave 3",
                            UnitNumber = "#04-04"
                        },
                        new
                        {
                            Id = 9,
                            Building = "Plaza Singapura",
                            Level = 2,
                            PostalCode = 238839,
                            Street = " 68 Orchard Rd",
                            UnitNumber = "#02-01"
                        },
                        new
                        {
                            Id = 10,
                            Building = "Tampines Mall",
                            Level = 4,
                            PostalCode = 529510,
                            Street = "4 Tampines Central 5",
                            UnitNumber = "#04-01"
                        });
                });

            modelBuilder.Entity("RestaurantReservation.Shared.Domain.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PhoneNumber")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("RestaurantReservation.Shared.Domain.Favourite", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RestaurantId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("RestaurantId");

                    b.ToTable("Favourites");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Hai Di Lao",
                            RestaurantId = 1
                        },
                        new
                        {
                            Id = 2,
                            Name = "Hai Di Lao",
                            RestaurantId = 2
                        },
                        new
                        {
                            Id = 3,
                            Name = "Hai Di Lao",
                            RestaurantId = 3
                        },
                        new
                        {
                            Id = 4,
                            Name = "Hai Di Lao",
                            RestaurantId = 5
                        });
                });

            modelBuilder.Entity("RestaurantReservation.Shared.Domain.Menu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ImagePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RestaurantId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RestaurantId");

                    b.ToTable("Menus");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ImagePath = "images/haidilaoMenu.jpg",
                            RestaurantId = 1
                        },
                        new
                        {
                            Id = 2,
                            ImagePath = "images/sichuandouhuaMenu.jpg",
                            RestaurantId = 2
                        },
                        new
                        {
                            Id = 3,
                            ImagePath = "images/beautyinthepotMenu.jpg",
                            RestaurantId = 3
                        },
                        new
                        {
                            Id = 4,
                            ImagePath = "images/shabusaiMenu.jpg",
                            RestaurantId = 4
                        },
                        new
                        {
                            Id = 5,
                            ImagePath = "images/cityhotpotMenu.jpg",
                            RestaurantId = 5
                        },
                        new
                        {
                            Id = 6,
                            ImagePath = "images/ssikkekMenu.jpg",
                            RestaurantId = 6
                        },
                        new
                        {
                            Id = 7,
                            ImagePath = "images/captainkimMenu.jpeg",
                            RestaurantId = 7
                        },
                        new
                        {
                            Id = 8,
                            ImagePath = "images/imkimkoreanMenu.jpg",
                            RestaurantId = 8
                        },
                        new
                        {
                            Id = 9,
                            ImagePath = "images/seoraeMenu.jpg",
                            RestaurantId = 9
                        },
                        new
                        {
                            Id = 10,
                            ImagePath = "images/seoulgardenMenu.png",
                            RestaurantId = 10
                        });
                });

            modelBuilder.Entity("RestaurantReservation.Shared.Domain.OperatingHour", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("ClosingTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Day")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("OpeningTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("RestaurantId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RestaurantId");

                    b.ToTable("OperatingHours");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ClosingTime = new DateTime(2024, 1, 1, 23, 0, 0, 0, DateTimeKind.Unspecified),
                            Day = "Monday",
                            OpeningTime = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            RestaurantId = 1
                        },
                        new
                        {
                            Id = 2,
                            ClosingTime = new DateTime(2024, 1, 1, 23, 0, 0, 0, DateTimeKind.Unspecified),
                            Day = "Tuesday",
                            OpeningTime = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            RestaurantId = 1
                        },
                        new
                        {
                            Id = 3,
                            ClosingTime = new DateTime(2024, 1, 1, 23, 0, 0, 0, DateTimeKind.Unspecified),
                            Day = "Wednesday",
                            OpeningTime = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            RestaurantId = 1
                        },
                        new
                        {
                            Id = 4,
                            ClosingTime = new DateTime(2024, 1, 1, 23, 0, 0, 0, DateTimeKind.Unspecified),
                            Day = "Thursday",
                            OpeningTime = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            RestaurantId = 1
                        },
                        new
                        {
                            Id = 5,
                            ClosingTime = new DateTime(2024, 1, 1, 23, 0, 0, 0, DateTimeKind.Unspecified),
                            Day = "Friday",
                            OpeningTime = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            RestaurantId = 1
                        },
                        new
                        {
                            Id = 6,
                            ClosingTime = new DateTime(2024, 1, 1, 23, 0, 0, 0, DateTimeKind.Unspecified),
                            Day = "Saturday",
                            OpeningTime = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            RestaurantId = 1
                        },
                        new
                        {
                            Id = 7,
                            ClosingTime = new DateTime(2024, 1, 1, 23, 0, 0, 0, DateTimeKind.Unspecified),
                            Day = "Sunday",
                            OpeningTime = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            RestaurantId = 1
                        },
                        new
                        {
                            Id = 8,
                            ClosingTime = new DateTime(2024, 1, 1, 23, 0, 0, 0, DateTimeKind.Unspecified),
                            Day = "Monday",
                            OpeningTime = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            RestaurantId = 2
                        },
                        new
                        {
                            Id = 9,
                            ClosingTime = new DateTime(2024, 1, 1, 23, 0, 0, 0, DateTimeKind.Unspecified),
                            Day = "Tuesday",
                            OpeningTime = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            RestaurantId = 2
                        },
                        new
                        {
                            Id = 10,
                            ClosingTime = new DateTime(2024, 1, 1, 23, 0, 0, 0, DateTimeKind.Unspecified),
                            Day = "Wednesday",
                            OpeningTime = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            RestaurantId = 2
                        },
                        new
                        {
                            Id = 11,
                            ClosingTime = new DateTime(2024, 1, 1, 23, 0, 0, 0, DateTimeKind.Unspecified),
                            Day = "Thursday",
                            OpeningTime = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            RestaurantId = 2
                        },
                        new
                        {
                            Id = 12,
                            ClosingTime = new DateTime(2024, 1, 1, 23, 0, 0, 0, DateTimeKind.Unspecified),
                            Day = "Friday",
                            OpeningTime = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            RestaurantId = 2
                        },
                        new
                        {
                            Id = 13,
                            ClosingTime = new DateTime(2024, 1, 1, 23, 0, 0, 0, DateTimeKind.Unspecified),
                            Day = "Saturday",
                            OpeningTime = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            RestaurantId = 2
                        },
                        new
                        {
                            Id = 14,
                            ClosingTime = new DateTime(2024, 1, 1, 23, 0, 0, 0, DateTimeKind.Unspecified),
                            Day = "Sunday",
                            OpeningTime = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            RestaurantId = 2
                        },
                        new
                        {
                            Id = 15,
                            ClosingTime = new DateTime(2024, 1, 1, 23, 0, 0, 0, DateTimeKind.Unspecified),
                            Day = "Monday",
                            OpeningTime = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            RestaurantId = 3
                        },
                        new
                        {
                            Id = 16,
                            ClosingTime = new DateTime(2024, 1, 1, 23, 0, 0, 0, DateTimeKind.Unspecified),
                            Day = "Tuesday",
                            OpeningTime = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            RestaurantId = 3
                        },
                        new
                        {
                            Id = 17,
                            ClosingTime = new DateTime(2024, 1, 1, 23, 0, 0, 0, DateTimeKind.Unspecified),
                            Day = "Wednesday",
                            OpeningTime = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            RestaurantId = 3
                        },
                        new
                        {
                            Id = 18,
                            ClosingTime = new DateTime(2024, 1, 1, 23, 0, 0, 0, DateTimeKind.Unspecified),
                            Day = "Thursday",
                            OpeningTime = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            RestaurantId = 3
                        },
                        new
                        {
                            Id = 19,
                            ClosingTime = new DateTime(2024, 1, 1, 23, 0, 0, 0, DateTimeKind.Unspecified),
                            Day = "Friday",
                            OpeningTime = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            RestaurantId = 3
                        },
                        new
                        {
                            Id = 20,
                            ClosingTime = new DateTime(2024, 1, 1, 23, 0, 0, 0, DateTimeKind.Unspecified),
                            Day = "Saturday",
                            OpeningTime = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            RestaurantId = 3
                        },
                        new
                        {
                            Id = 21,
                            ClosingTime = new DateTime(2024, 1, 1, 23, 0, 0, 0, DateTimeKind.Unspecified),
                            Day = "Sunday",
                            OpeningTime = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            RestaurantId = 3
                        },
                        new
                        {
                            Id = 22,
                            ClosingTime = new DateTime(2024, 1, 1, 23, 0, 0, 0, DateTimeKind.Unspecified),
                            Day = "Monday",
                            OpeningTime = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            RestaurantId = 4
                        },
                        new
                        {
                            Id = 23,
                            ClosingTime = new DateTime(2024, 1, 1, 23, 0, 0, 0, DateTimeKind.Unspecified),
                            Day = "Tuesday",
                            OpeningTime = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            RestaurantId = 4
                        },
                        new
                        {
                            Id = 24,
                            ClosingTime = new DateTime(2024, 1, 1, 23, 0, 0, 0, DateTimeKind.Unspecified),
                            Day = "Wednesday",
                            OpeningTime = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            RestaurantId = 4
                        },
                        new
                        {
                            Id = 25,
                            ClosingTime = new DateTime(2024, 1, 1, 23, 0, 0, 0, DateTimeKind.Unspecified),
                            Day = "Thursday",
                            OpeningTime = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            RestaurantId = 4
                        },
                        new
                        {
                            Id = 26,
                            ClosingTime = new DateTime(2024, 1, 1, 23, 0, 0, 0, DateTimeKind.Unspecified),
                            Day = "Friday",
                            OpeningTime = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            RestaurantId = 4
                        },
                        new
                        {
                            Id = 27,
                            ClosingTime = new DateTime(2024, 1, 1, 23, 0, 0, 0, DateTimeKind.Unspecified),
                            Day = "Saturday",
                            OpeningTime = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            RestaurantId = 4
                        },
                        new
                        {
                            Id = 28,
                            ClosingTime = new DateTime(2024, 1, 1, 23, 0, 0, 0, DateTimeKind.Unspecified),
                            Day = "Sunday",
                            OpeningTime = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            RestaurantId = 4
                        },
                        new
                        {
                            Id = 29,
                            ClosingTime = new DateTime(2024, 1, 1, 23, 0, 0, 0, DateTimeKind.Unspecified),
                            Day = "Monday",
                            OpeningTime = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            RestaurantId = 5
                        },
                        new
                        {
                            Id = 30,
                            ClosingTime = new DateTime(2024, 1, 1, 23, 0, 0, 0, DateTimeKind.Unspecified),
                            Day = "Tuesday",
                            OpeningTime = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            RestaurantId = 5
                        },
                        new
                        {
                            Id = 31,
                            ClosingTime = new DateTime(2024, 1, 1, 23, 0, 0, 0, DateTimeKind.Unspecified),
                            Day = "Wednesday",
                            OpeningTime = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            RestaurantId = 5
                        },
                        new
                        {
                            Id = 32,
                            ClosingTime = new DateTime(2024, 1, 1, 23, 0, 0, 0, DateTimeKind.Unspecified),
                            Day = "Thursday",
                            OpeningTime = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            RestaurantId = 5
                        },
                        new
                        {
                            Id = 33,
                            ClosingTime = new DateTime(2024, 1, 1, 23, 0, 0, 0, DateTimeKind.Unspecified),
                            Day = "Friday",
                            OpeningTime = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            RestaurantId = 5
                        },
                        new
                        {
                            Id = 34,
                            ClosingTime = new DateTime(2024, 1, 1, 23, 0, 0, 0, DateTimeKind.Unspecified),
                            Day = "Saturday",
                            OpeningTime = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            RestaurantId = 5
                        },
                        new
                        {
                            Id = 35,
                            ClosingTime = new DateTime(2024, 1, 1, 23, 0, 0, 0, DateTimeKind.Unspecified),
                            Day = "Sunday",
                            OpeningTime = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            RestaurantId = 5
                        },
                        new
                        {
                            Id = 36,
                            ClosingTime = new DateTime(2024, 1, 1, 23, 0, 0, 0, DateTimeKind.Unspecified),
                            Day = "Monday",
                            OpeningTime = new DateTime(2024, 1, 1, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            RestaurantId = 6
                        },
                        new
                        {
                            Id = 37,
                            ClosingTime = new DateTime(2024, 1, 1, 23, 0, 0, 0, DateTimeKind.Unspecified),
                            Day = "Tuesday",
                            OpeningTime = new DateTime(2024, 1, 1, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            RestaurantId = 6
                        },
                        new
                        {
                            Id = 38,
                            ClosingTime = new DateTime(2024, 1, 1, 23, 0, 0, 0, DateTimeKind.Unspecified),
                            Day = "Wednesday",
                            OpeningTime = new DateTime(2024, 1, 1, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            RestaurantId = 6
                        },
                        new
                        {
                            Id = 39,
                            ClosingTime = new DateTime(2024, 1, 1, 23, 0, 0, 0, DateTimeKind.Unspecified),
                            Day = "Thursday",
                            OpeningTime = new DateTime(2024, 1, 1, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            RestaurantId = 6
                        },
                        new
                        {
                            Id = 40,
                            ClosingTime = new DateTime(2024, 1, 1, 23, 0, 0, 0, DateTimeKind.Unspecified),
                            Day = "Friday",
                            OpeningTime = new DateTime(2024, 1, 1, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            RestaurantId = 6
                        },
                        new
                        {
                            Id = 41,
                            ClosingTime = new DateTime(2024, 1, 1, 23, 0, 0, 0, DateTimeKind.Unspecified),
                            Day = "Saturday",
                            OpeningTime = new DateTime(2024, 1, 1, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            RestaurantId = 6
                        },
                        new
                        {
                            Id = 42,
                            ClosingTime = new DateTime(2024, 1, 1, 23, 0, 0, 0, DateTimeKind.Unspecified),
                            Day = "Sunday",
                            OpeningTime = new DateTime(2024, 1, 1, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            RestaurantId = 6
                        },
                        new
                        {
                            Id = 43,
                            ClosingTime = new DateTime(2024, 1, 1, 23, 0, 0, 0, DateTimeKind.Unspecified),
                            Day = "Monday",
                            OpeningTime = new DateTime(2024, 1, 1, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            RestaurantId = 7
                        },
                        new
                        {
                            Id = 44,
                            ClosingTime = new DateTime(2024, 1, 1, 23, 0, 0, 0, DateTimeKind.Unspecified),
                            Day = "Tuesday",
                            OpeningTime = new DateTime(2024, 1, 1, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            RestaurantId = 7
                        },
                        new
                        {
                            Id = 45,
                            ClosingTime = new DateTime(2024, 1, 1, 23, 0, 0, 0, DateTimeKind.Unspecified),
                            Day = "Wednesday",
                            OpeningTime = new DateTime(2024, 1, 1, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            RestaurantId = 7
                        },
                        new
                        {
                            Id = 46,
                            ClosingTime = new DateTime(2024, 1, 1, 23, 0, 0, 0, DateTimeKind.Unspecified),
                            Day = "Thursday",
                            OpeningTime = new DateTime(2024, 1, 1, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            RestaurantId = 7
                        },
                        new
                        {
                            Id = 47,
                            ClosingTime = new DateTime(2024, 1, 1, 23, 0, 0, 0, DateTimeKind.Unspecified),
                            Day = "Friday",
                            OpeningTime = new DateTime(2024, 1, 1, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            RestaurantId = 7
                        },
                        new
                        {
                            Id = 48,
                            ClosingTime = new DateTime(2024, 1, 1, 23, 0, 0, 0, DateTimeKind.Unspecified),
                            Day = "Saturday",
                            OpeningTime = new DateTime(2024, 1, 1, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            RestaurantId = 7
                        },
                        new
                        {
                            Id = 49,
                            ClosingTime = new DateTime(2024, 1, 1, 23, 0, 0, 0, DateTimeKind.Unspecified),
                            Day = "Sunday",
                            OpeningTime = new DateTime(2024, 1, 1, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            RestaurantId = 7
                        },
                        new
                        {
                            Id = 50,
                            ClosingTime = new DateTime(2024, 1, 1, 23, 0, 0, 0, DateTimeKind.Unspecified),
                            Day = "Monday",
                            OpeningTime = new DateTime(2024, 1, 1, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            RestaurantId = 8
                        },
                        new
                        {
                            Id = 51,
                            ClosingTime = new DateTime(2024, 1, 1, 23, 0, 0, 0, DateTimeKind.Unspecified),
                            Day = "Tuesday",
                            OpeningTime = new DateTime(2024, 1, 1, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            RestaurantId = 8
                        },
                        new
                        {
                            Id = 52,
                            ClosingTime = new DateTime(2024, 1, 1, 23, 0, 0, 0, DateTimeKind.Unspecified),
                            Day = "Wednesday",
                            OpeningTime = new DateTime(2024, 1, 1, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            RestaurantId = 8
                        },
                        new
                        {
                            Id = 53,
                            ClosingTime = new DateTime(2024, 1, 1, 23, 0, 0, 0, DateTimeKind.Unspecified),
                            Day = "Thursday",
                            OpeningTime = new DateTime(2024, 1, 1, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            RestaurantId = 8
                        },
                        new
                        {
                            Id = 54,
                            ClosingTime = new DateTime(2024, 1, 1, 23, 0, 0, 0, DateTimeKind.Unspecified),
                            Day = "Friday",
                            OpeningTime = new DateTime(2024, 1, 1, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            RestaurantId = 8
                        },
                        new
                        {
                            Id = 55,
                            ClosingTime = new DateTime(2024, 1, 1, 23, 0, 0, 0, DateTimeKind.Unspecified),
                            Day = "Saturday",
                            OpeningTime = new DateTime(2024, 1, 1, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            RestaurantId = 8
                        },
                        new
                        {
                            Id = 56,
                            ClosingTime = new DateTime(2024, 1, 1, 23, 0, 0, 0, DateTimeKind.Unspecified),
                            Day = "Sunday",
                            OpeningTime = new DateTime(2024, 1, 1, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            RestaurantId = 8
                        },
                        new
                        {
                            Id = 57,
                            ClosingTime = new DateTime(2024, 1, 1, 23, 0, 0, 0, DateTimeKind.Unspecified),
                            Day = "Monday",
                            OpeningTime = new DateTime(2024, 1, 1, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            RestaurantId = 9
                        },
                        new
                        {
                            Id = 58,
                            ClosingTime = new DateTime(2024, 1, 1, 23, 0, 0, 0, DateTimeKind.Unspecified),
                            Day = "Tuesday",
                            OpeningTime = new DateTime(2024, 1, 1, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            RestaurantId = 9
                        },
                        new
                        {
                            Id = 59,
                            ClosingTime = new DateTime(2024, 1, 1, 23, 0, 0, 0, DateTimeKind.Unspecified),
                            Day = "Wednesday",
                            OpeningTime = new DateTime(2024, 1, 1, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            RestaurantId = 9
                        },
                        new
                        {
                            Id = 60,
                            ClosingTime = new DateTime(2024, 1, 1, 23, 0, 0, 0, DateTimeKind.Unspecified),
                            Day = "Thursday",
                            OpeningTime = new DateTime(2024, 1, 1, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            RestaurantId = 9
                        },
                        new
                        {
                            Id = 61,
                            ClosingTime = new DateTime(2024, 1, 1, 23, 0, 0, 0, DateTimeKind.Unspecified),
                            Day = "Friday",
                            OpeningTime = new DateTime(2024, 1, 1, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            RestaurantId = 9
                        },
                        new
                        {
                            Id = 62,
                            ClosingTime = new DateTime(2024, 1, 1, 23, 0, 0, 0, DateTimeKind.Unspecified),
                            Day = "Saturday",
                            OpeningTime = new DateTime(2024, 1, 1, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            RestaurantId = 9
                        },
                        new
                        {
                            Id = 63,
                            ClosingTime = new DateTime(2024, 1, 1, 23, 0, 0, 0, DateTimeKind.Unspecified),
                            Day = "Sunday",
                            OpeningTime = new DateTime(2024, 1, 1, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            RestaurantId = 9
                        },
                        new
                        {
                            Id = 64,
                            ClosingTime = new DateTime(2024, 1, 1, 23, 0, 0, 0, DateTimeKind.Unspecified),
                            Day = "Monday",
                            OpeningTime = new DateTime(2024, 1, 1, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            RestaurantId = 10
                        },
                        new
                        {
                            Id = 65,
                            ClosingTime = new DateTime(2024, 1, 1, 23, 0, 0, 0, DateTimeKind.Unspecified),
                            Day = "Tuesday",
                            OpeningTime = new DateTime(2024, 1, 1, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            RestaurantId = 10
                        },
                        new
                        {
                            Id = 66,
                            ClosingTime = new DateTime(2024, 1, 1, 23, 0, 0, 0, DateTimeKind.Unspecified),
                            Day = "Wednesday",
                            OpeningTime = new DateTime(2024, 1, 1, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            RestaurantId = 10
                        },
                        new
                        {
                            Id = 67,
                            ClosingTime = new DateTime(2024, 1, 1, 23, 0, 0, 0, DateTimeKind.Unspecified),
                            Day = "Thursday",
                            OpeningTime = new DateTime(2024, 1, 1, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            RestaurantId = 10
                        },
                        new
                        {
                            Id = 68,
                            ClosingTime = new DateTime(2024, 1, 1, 23, 0, 0, 0, DateTimeKind.Unspecified),
                            Day = "Friday",
                            OpeningTime = new DateTime(2024, 1, 1, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            RestaurantId = 10
                        },
                        new
                        {
                            Id = 69,
                            ClosingTime = new DateTime(2024, 1, 1, 23, 0, 0, 0, DateTimeKind.Unspecified),
                            Day = "Saturday",
                            OpeningTime = new DateTime(2024, 1, 1, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            RestaurantId = 10
                        },
                        new
                        {
                            Id = 70,
                            ClosingTime = new DateTime(2024, 1, 1, 23, 0, 0, 0, DateTimeKind.Unspecified),
                            Day = "Sunday",
                            OpeningTime = new DateTime(2024, 1, 1, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            RestaurantId = 10
                        });
                });

            modelBuilder.Entity("RestaurantReservation.Shared.Domain.PaymentMethod", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CVV")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("CardNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateOfExpiry")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("PaymentMethods");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CVV = 123,
                            CardNumber = "1234123412341234",
                            DateOfExpiry = new DateTime(2025, 1, 11, 13, 9, 33, 896, DateTimeKind.Local).AddTicks(4385),
                            Name = "Josh"
                        },
                        new
                        {
                            Id = 2,
                            CVV = 321,
                            CardNumber = "1234123412341234",
                            DateOfExpiry = new DateTime(2025, 1, 11, 13, 9, 33, 896, DateTimeKind.Local).AddTicks(4396),
                            Name = "Liza"
                        });
                });

            modelBuilder.Entity("RestaurantReservation.Shared.Domain.Promotion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("Discount")
                        .HasColumnType("float");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Promotions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "NY2024",
                            Description = "Celebrate the New Year with fantastic deals! Enjoy exclusive discounts on all reservations. Start 2024 in style with limited-time offers and extra savings just for you. Renew, refresh, and rejoice! Reserve now and make this year unforgettable. Cheers to a fantastic 2024!",
                            Discount = 10.0,
                            EndDate = new DateTime(2024, 2, 11, 13, 9, 33, 896, DateTimeKind.Local).AddTicks(5325),
                            Name = "NewYear",
                            StartDate = new DateTime(2024, 1, 11, 13, 9, 33, 896, DateTimeKind.Local).AddTicks(5323)
                        },
                        new
                        {
                            Id = 2,
                            Code = "CNY2024",
                            Description = "Celebrate the Lunar New Year at Bookbite! Reserve your table now for an exquisite culinary journey featuring luck-filled banquets and exclusive dining packages. Indulge in authentic flavors that capture the essence of the season. Make your celebrations memorable with us. Gong Xi Fa Cai!",
                            Discount = 10.0,
                            EndDate = new DateTime(2024, 3, 11, 13, 9, 33, 896, DateTimeKind.Local).AddTicks(5330),
                            Name = "ChineseNewYear",
                            StartDate = new DateTime(2024, 2, 11, 13, 9, 33, 896, DateTimeKind.Local).AddTicks(5329)
                        },
                        new
                        {
                            Id = 3,
                            Code = "LOVE2024",
                            Description = "Celebrate love at Bookbite! Book your romantic evening for an unforgettable Valentine's experience. Indulge in exquisite dining with our special menu, crafted to ignite the flames of love. Enjoy a romantic ambiance and impeccable service, setting the stage for a memorable evening. Delight in exclusive dishes designed to make hearts flutter. Love is in the air at Bookbite!",
                            Discount = 10.0,
                            EndDate = new DateTime(2024, 4, 11, 13, 9, 33, 896, DateTimeKind.Local).AddTicks(5332),
                            Name = "Valentine",
                            StartDate = new DateTime(2024, 3, 11, 13, 9, 33, 896, DateTimeKind.Local).AddTicks(5331)
                        });
                });

            modelBuilder.Entity("RestaurantReservation.Shared.Domain.Reservation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("Guest")
                        .HasColumnType("int");

                    b.Property<int?>("PromotionId")
                        .HasColumnType("int");

                    b.Property<string>("Request")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ReservationStatusId")
                        .HasColumnType("int");

                    b.Property<int?>("RestaurantId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("PromotionId");

                    b.HasIndex("ReservationStatusId");

                    b.HasIndex("RestaurantId");

                    b.ToTable("Reservations");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DateTime = new DateTime(2024, 1, 11, 13, 9, 33, 847, DateTimeKind.Local).AddTicks(152),
                            Guest = 2,
                            Request = "None",
                            ReservationStatusId = 1,
                            RestaurantId = 1
                        },
                        new
                        {
                            Id = 2,
                            DateTime = new DateTime(2024, 1, 11, 13, 9, 33, 847, DateTimeKind.Local).AddTicks(168),
                            Guest = 3,
                            Request = "None",
                            ReservationStatusId = 2,
                            RestaurantId = 2
                        },
                        new
                        {
                            Id = 3,
                            DateTime = new DateTime(2024, 1, 11, 13, 9, 33, 847, DateTimeKind.Local).AddTicks(170),
                            Guest = 4,
                            Request = "None",
                            ReservationStatusId = 3,
                            RestaurantId = 3
                        },
                        new
                        {
                            Id = 4,
                            DateTime = new DateTime(2024, 1, 11, 13, 9, 33, 847, DateTimeKind.Local).AddTicks(172),
                            Guest = 2,
                            Request = "None",
                            ReservationStatusId = 4,
                            RestaurantId = 5
                        });
                });

            modelBuilder.Entity("RestaurantReservation.Shared.Domain.ReservationStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ReservationStatuses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Status = "Pending"
                        },
                        new
                        {
                            Id = 2,
                            Status = "Pending"
                        },
                        new
                        {
                            Id = 3,
                            Status = "Pending"
                        },
                        new
                        {
                            Id = 4,
                            Status = "Pending"
                        });
                });

            modelBuilder.Entity("RestaurantReservation.Shared.Domain.Restaurant", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AddressId")
                        .HasColumnType("int");

                    b.Property<string>("Category")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cuisine")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImagePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PhoneNumber")
                        .HasColumnType("int");

                    b.Property<int?>("RestaurantOwnerId")
                        .HasColumnType("int");

                    b.Property<int?>("SubscriptionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AddressId");

                    b.HasIndex("RestaurantOwnerId");

                    b.HasIndex("SubscriptionId");

                    b.ToTable("Restaurants");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AddressId = 1,
                            Category = "Hotpot",
                            Cuisine = "Chinese",
                            Email = "admissions@tp.edu.sg",
                            ImagePath = "images/haidilao.jpg",
                            Location = "East",
                            Name = "Hai Di Lao",
                            PhoneNumber = 67804201
                        },
                        new
                        {
                            Id = 2,
                            AddressId = 2,
                            Category = "Hotpot",
                            Cuisine = "Chinese",
                            Email = "admissions@tp.edu.sg",
                            ImagePath = "images/sichuandouhua.jpg",
                            Location = "Central",
                            Name = "Si Chuan Dou Hua",
                            PhoneNumber = 67804201
                        },
                        new
                        {
                            Id = 3,
                            AddressId = 3,
                            Category = "Hotpot",
                            Cuisine = "Chinese",
                            Email = "admissions@tp.edu.sg",
                            ImagePath = "images/beautyinthepot.jpg",
                            Location = "South",
                            Name = "Beauty In The Pot",
                            PhoneNumber = 67804201
                        },
                        new
                        {
                            Id = 4,
                            AddressId = 4,
                            Category = "Hotpot",
                            Cuisine = "Chinese",
                            Email = "admissions@tp.edu.sg",
                            ImagePath = "images/shabusai.jpg",
                            Location = "East",
                            Name = "Shabu Sai",
                            PhoneNumber = 67804201
                        },
                        new
                        {
                            Id = 5,
                            AddressId = 5,
                            Category = "Hotpot",
                            Cuisine = "Chinese",
                            Email = "admissions@tp.edu.sg",
                            ImagePath = "images/cityhotpot.jpg",
                            Location = "SouthWest",
                            Name = "City Hotpot",
                            PhoneNumber = 67804201
                        },
                        new
                        {
                            Id = 6,
                            AddressId = 6,
                            Category = "BBQ",
                            Cuisine = "Korea",
                            Email = "admissions@tp.edu.sg",
                            ImagePath = "images/ssikkek.jpg",
                            Location = "Central",
                            Name = "Ssikkek",
                            PhoneNumber = 67804201
                        },
                        new
                        {
                            Id = 7,
                            AddressId = 7,
                            Category = "BBQ",
                            Cuisine = "Korea",
                            Email = "admissions@tp.edu.sg",
                            ImagePath = "images/captainkim.jpg",
                            Location = "East",
                            Name = "Captain Kim",
                            PhoneNumber = 67804201
                        },
                        new
                        {
                            Id = 8,
                            AddressId = 8,
                            Category = "BBQ",
                            Cuisine = "Korea",
                            Email = "admissions@tp.edu.sg",
                            ImagePath = "images/imkimkorean.jpg",
                            Location = "North",
                            Name = "I'm Kim Korean",
                            PhoneNumber = 67804201
                        },
                        new
                        {
                            Id = 9,
                            AddressId = 9,
                            Category = "BBQ",
                            Cuisine = "Korea",
                            Email = "admissions@tp.edu.sg",
                            ImagePath = "images/seorae.jpg",
                            Location = "Central",
                            Name = "Seorae",
                            PhoneNumber = 67804201
                        },
                        new
                        {
                            Id = 10,
                            AddressId = 10,
                            Category = "BBQ",
                            Cuisine = "Korea",
                            Email = "admissions@tp.edu.sg",
                            ImagePath = "images/seoulgarden.jpg",
                            Location = "East",
                            Name = "Seoul Garden",
                            PhoneNumber = 67804201
                        });
                });

            modelBuilder.Entity("RestaurantReservation.Shared.Domain.RestaurantApplication", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AddressId")
                        .HasColumnType("int");

                    b.Property<string>("Cuisine")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PhoneNumber")
                        .HasColumnType("int");

                    b.Property<string>("RestaurantName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("StaffId")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AddressId");

                    b.HasIndex("CustomerId");

                    b.HasIndex("StaffId");

                    b.ToTable("RestaurantApplications");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Cuisine = "Chinese",
                            Description = "good hotpot,must try!",
                            Email = "paradisehotpot@paradise.com",
                            PhoneNumber = 63864838,
                            RestaurantName = "Paradise Hotpot",
                            Status = "Active"
                        },
                        new
                        {
                            Id = 2,
                            Cuisine = "Chinese",
                            Description = "good hotpot,must try!",
                            Email = "slfhotpot@slf.com",
                            PhoneNumber = 62601838,
                            RestaurantName = "Shi Li Fang Hotpot",
                            Status = "Active"
                        });
                });

            modelBuilder.Entity("RestaurantReservation.Shared.Domain.RestaurantOwner", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("RestaurantOwners");
                });

            modelBuilder.Entity("RestaurantReservation.Shared.Domain.Review", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Rating")
                        .HasColumnType("int");

                    b.Property<int?>("RestaurantId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("RestaurantId");

                    b.ToTable("Reviews");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DateTime = new DateTime(2024, 1, 11, 13, 9, 33, 896, DateTimeKind.Local).AddTicks(5509),
                            Description = "Hai di lao staff very attentive",
                            Rating = 4,
                            RestaurantId = 1
                        },
                        new
                        {
                            Id = 2,
                            DateTime = new DateTime(2024, 1, 11, 13, 9, 33, 896, DateTimeKind.Local).AddTicks(5513),
                            Description = "Good food",
                            Rating = 4,
                            RestaurantId = 2
                        },
                        new
                        {
                            Id = 3,
                            DateTime = new DateTime(2024, 1, 11, 13, 9, 33, 896, DateTimeKind.Local).AddTicks(5515),
                            Description = "Nice soup",
                            Rating = 4,
                            RestaurantId = 3
                        },
                        new
                        {
                            Id = 4,
                            DateTime = new DateTime(2024, 1, 11, 13, 9, 33, 896, DateTimeKind.Local).AddTicks(5516),
                            Description = "Cheap and affordable",
                            Rating = 4,
                            RestaurantId = 4
                        },
                        new
                        {
                            Id = 5,
                            DateTime = new DateTime(2024, 1, 11, 13, 9, 33, 896, DateTimeKind.Local).AddTicks(5517),
                            Description = "Great restaurant",
                            Rating = 4,
                            RestaurantId = 5
                        });
                });

            modelBuilder.Entity("RestaurantReservation.Shared.Domain.SeatingCapacity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("Capacity")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int?>("RestaurantId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RestaurantId");

                    b.ToTable("SeatingCapacities");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Capacity = 15,
                            Date = new DateTime(2024, 1, 11, 13, 9, 33, 896, DateTimeKind.Local).AddTicks(2839),
                            RestaurantId = 1
                        },
                        new
                        {
                            Id = 2,
                            Capacity = 15,
                            Date = new DateTime(2024, 1, 11, 13, 9, 33, 896, DateTimeKind.Local).AddTicks(2864),
                            RestaurantId = 2
                        },
                        new
                        {
                            Id = 3,
                            Capacity = 15,
                            Date = new DateTime(2024, 1, 11, 13, 9, 33, 896, DateTimeKind.Local).AddTicks(2866),
                            RestaurantId = 3
                        },
                        new
                        {
                            Id = 4,
                            Capacity = 15,
                            Date = new DateTime(2024, 1, 11, 13, 9, 33, 896, DateTimeKind.Local).AddTicks(2867),
                            RestaurantId = 4
                        },
                        new
                        {
                            Id = 5,
                            Capacity = 15,
                            Date = new DateTime(2024, 1, 11, 13, 9, 33, 896, DateTimeKind.Local).AddTicks(2869),
                            RestaurantId = 5
                        });
                });

            modelBuilder.Entity("RestaurantReservation.Shared.Domain.Staff", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("ContactEnd")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ContactStart")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DOB")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NRIC")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nationality")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PhoneNumber")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Staffs");
                });

            modelBuilder.Entity("RestaurantReservation.Shared.Domain.Subscription", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<double?>("PlatformFee")
                        .HasColumnType("float");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Subscriptions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            EndDate = new DateTime(2024, 1, 11, 13, 9, 33, 896, DateTimeKind.Local).AddTicks(3215),
                            PlatformFee = 10.0,
                            StartDate = new DateTime(2024, 1, 11, 13, 9, 33, 896, DateTimeKind.Local).AddTicks(3212)
                        },
                        new
                        {
                            Id = 2,
                            EndDate = new DateTime(2024, 1, 11, 13, 9, 33, 896, DateTimeKind.Local).AddTicks(3218),
                            PlatformFee = 10.0,
                            StartDate = new DateTime(2024, 1, 11, 13, 9, 33, 896, DateTimeKind.Local).AddTicks(3217)
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("RestaurantReservation.Server.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("RestaurantReservation.Server.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RestaurantReservation.Server.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("RestaurantReservation.Server.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RestaurantReservation.Shared.Domain.Favourite", b =>
                {
                    b.HasOne("RestaurantReservation.Shared.Domain.Customer", "Customer")
                        .WithMany("Favourites")
                        .HasForeignKey("CustomerId");

                    b.HasOne("RestaurantReservation.Shared.Domain.Restaurant", "Restaurant")
                        .WithMany("Favourites")
                        .HasForeignKey("RestaurantId");

                    b.Navigation("Customer");

                    b.Navigation("Restaurant");
                });

            modelBuilder.Entity("RestaurantReservation.Shared.Domain.Menu", b =>
                {
                    b.HasOne("RestaurantReservation.Shared.Domain.Restaurant", "Restaurant")
                        .WithMany("Menus")
                        .HasForeignKey("RestaurantId");

                    b.Navigation("Restaurant");
                });

            modelBuilder.Entity("RestaurantReservation.Shared.Domain.OperatingHour", b =>
                {
                    b.HasOne("RestaurantReservation.Shared.Domain.Restaurant", "Restaurant")
                        .WithMany("OperatingHours")
                        .HasForeignKey("RestaurantId");

                    b.Navigation("Restaurant");
                });

            modelBuilder.Entity("RestaurantReservation.Shared.Domain.PaymentMethod", b =>
                {
                    b.HasOne("RestaurantReservation.Shared.Domain.Customer", "Customer")
                        .WithMany("PaymentMethods")
                        .HasForeignKey("CustomerId");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("RestaurantReservation.Shared.Domain.Reservation", b =>
                {
                    b.HasOne("RestaurantReservation.Shared.Domain.Customer", "Customer")
                        .WithMany("Reservations")
                        .HasForeignKey("CustomerId");

                    b.HasOne("RestaurantReservation.Shared.Domain.Promotion", "Promotion")
                        .WithMany()
                        .HasForeignKey("PromotionId");

                    b.HasOne("RestaurantReservation.Shared.Domain.ReservationStatus", "ReservationStatus")
                        .WithMany("Reservations")
                        .HasForeignKey("ReservationStatusId");

                    b.HasOne("RestaurantReservation.Shared.Domain.Restaurant", "Restaurant")
                        .WithMany("Reservations")
                        .HasForeignKey("RestaurantId");

                    b.Navigation("Customer");

                    b.Navigation("Promotion");

                    b.Navigation("ReservationStatus");

                    b.Navigation("Restaurant");
                });

            modelBuilder.Entity("RestaurantReservation.Shared.Domain.Restaurant", b =>
                {
                    b.HasOne("RestaurantReservation.Shared.Domain.Address", "Address")
                        .WithMany()
                        .HasForeignKey("AddressId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RestaurantReservation.Shared.Domain.RestaurantOwner", "RestaurantOwner")
                        .WithMany("Restaurants")
                        .HasForeignKey("RestaurantOwnerId");

                    b.HasOne("RestaurantReservation.Shared.Domain.Subscription", "Subscription")
                        .WithMany("Restaurants")
                        .HasForeignKey("SubscriptionId");

                    b.Navigation("Address");

                    b.Navigation("RestaurantOwner");

                    b.Navigation("Subscription");
                });

            modelBuilder.Entity("RestaurantReservation.Shared.Domain.RestaurantApplication", b =>
                {
                    b.HasOne("RestaurantReservation.Shared.Domain.Address", "Address")
                        .WithMany()
                        .HasForeignKey("AddressId");

                    b.HasOne("RestaurantReservation.Shared.Domain.Customer", "Customer")
                        .WithMany("RestaurantApplications")
                        .HasForeignKey("CustomerId");

                    b.HasOne("RestaurantReservation.Shared.Domain.Staff", "Staff")
                        .WithMany("RestaurantApplications")
                        .HasForeignKey("StaffId");

                    b.Navigation("Address");

                    b.Navigation("Customer");

                    b.Navigation("Staff");
                });

            modelBuilder.Entity("RestaurantReservation.Shared.Domain.RestaurantOwner", b =>
                {
                    b.HasOne("RestaurantReservation.Shared.Domain.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("RestaurantReservation.Shared.Domain.Review", b =>
                {
                    b.HasOne("RestaurantReservation.Shared.Domain.Customer", "Customer")
                        .WithMany("Reviews")
                        .HasForeignKey("CustomerId");

                    b.HasOne("RestaurantReservation.Shared.Domain.Restaurant", "Restaurant")
                        .WithMany("Reviews")
                        .HasForeignKey("RestaurantId");

                    b.Navigation("Customer");

                    b.Navigation("Restaurant");
                });

            modelBuilder.Entity("RestaurantReservation.Shared.Domain.SeatingCapacity", b =>
                {
                    b.HasOne("RestaurantReservation.Shared.Domain.Restaurant", "Restaurant")
                        .WithMany("SeatingCapacities")
                        .HasForeignKey("RestaurantId");

                    b.Navigation("Restaurant");
                });

            modelBuilder.Entity("RestaurantReservation.Shared.Domain.Customer", b =>
                {
                    b.Navigation("Favourites");

                    b.Navigation("PaymentMethods");

                    b.Navigation("Reservations");

                    b.Navigation("RestaurantApplications");

                    b.Navigation("Reviews");
                });

            modelBuilder.Entity("RestaurantReservation.Shared.Domain.ReservationStatus", b =>
                {
                    b.Navigation("Reservations");
                });

            modelBuilder.Entity("RestaurantReservation.Shared.Domain.Restaurant", b =>
                {
                    b.Navigation("Favourites");

                    b.Navigation("Menus");

                    b.Navigation("OperatingHours");

                    b.Navigation("Reservations");

                    b.Navigation("Reviews");

                    b.Navigation("SeatingCapacities");
                });

            modelBuilder.Entity("RestaurantReservation.Shared.Domain.RestaurantOwner", b =>
                {
                    b.Navigation("Restaurants");
                });

            modelBuilder.Entity("RestaurantReservation.Shared.Domain.Staff", b =>
                {
                    b.Navigation("RestaurantApplications");
                });

            modelBuilder.Entity("RestaurantReservation.Shared.Domain.Subscription", b =>
                {
                    b.Navigation("Restaurants");
                });
#pragma warning restore 612, 618
        }
    }
}

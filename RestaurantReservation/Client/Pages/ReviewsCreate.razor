@page "/reviews/create/{id:int}"
@inject HttpClient _client
@inject IJSRuntime js
@inject NavigationManager _navManager

<div class="container">
	<EditForm Model="@review" OnValidSubmit="CreateReview">
		<DataAnnotationsValidator />
		<ValidationSummary />
		<div class="form-group">
			<label>Rating</label>
			<div>
				<InputNumber min="1" max="5" @bind-Value="review.Rating" class="form-control" />
				<ValidationMessage For="@(() => review.Rating)" />
			</div>
		</div>
		<div class="form-group">
			<label>Description</label>
			<div>
				<InputText @bind-Value="review.Description" class="form-control" />
				<ValidationMessage For="@(() => review.Description)" />
			</div>
		</div>

		<hr class="my-4" />
		<button type="submit" class="btn btn-success btn-block">Add Review</button>

	</EditForm>
</div>
@code {
	[Parameter]
	public int id { get; set; }
	Review review = new Review();


	async Task CreateReview()
	{
		review.RestaurantId = id;
		review.DateTime = DateTime.Now;
		await _client.PostAsJsonAsync($"{Endpoints.ReviewsEndpoint}", review);
		await js.InvokeVoidAsync("alert", "Review created");
		_navManager.NavigateTo($"/reviews/{id}");
	}

}

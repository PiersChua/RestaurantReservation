@page "/reservationhistory"
@inject HttpClient _client
@inject IJSRuntime js
@attribute [Authorize]

<h3>Reservation History</h3>
<br />
@if ( Reservations != null)
{
    <table class="table table-responsive">
        <thead>
            <tr>
                <th>Name</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var reservation in Reservations)
            {
                <tr>
                    <td>@reservation?.Restaurant?.Name</td>
                </tr>
            }
        </tbody>
    </table>
    
}
else
{
    <div class="alert alert-info">Loading Reservations...</div>
}

@code {
    private List<Reservation>? Reservations;

    protected async override Task OnInitializedAsync()
    {
        Reservations = await _client.GetFromJsonAsync<List<Reservation>>($"{Endpoints.ReservationsEndpoint}");
    }

    async Task Delete(int reservationId)
    {
        var reservation = Reservations.First(q => q.Id == reservationId);
        var confirm = await js.InvokeAsync<bool>("confirm", $"Do you want to delete {reservation.Restaurant.Name} reservation?");
        if (Reservations != null)
        {
            if (confirm)
            {
                await _client.DeleteAsync($"{Endpoints.ReservationsEndpoint}/{reservationId}");
                await OnInitializedAsync();
            }
        }
    }
}

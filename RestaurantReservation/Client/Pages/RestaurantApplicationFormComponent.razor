@inject HttpClient _client

<EditForm Model="@RestaurantApplication"OnValidSubmit="@OnValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary/>
    <div class="form-group">
        <label >Name: </label>
        <InputText @bind-Value="RestaurantApplication.RestaurantName" />
    </div>
    <div class="form-group">
        <label>Name: </label>
        <InputText @bind-Value="RestaurantApplication.Cuisine" />
    </div>
    <div class="form-group">
        <label >Email: </label>
        <InputText @bind-Value="RestaurantApplication.Email" />
    </div>
    <div class="form-group">
        <label >Phone Number</label>
        <InputNumber @bind-Value="RestaurantApplication.PhoneNumber" />
    </div>
    <div class="form-group">
        <label>Address</label>
        <InputNumber @bind-Value="resAddress.Level" />
    </div>

    <br/>
    <button type="submit" class="btn btn-success btn-block">@ButtonText</button>
</EditForm>

@code {
    [Parameter] public RestaurantApplication? RestaurantApplication { get; set; }
    [Parameter] public string? ButtonText { get; set; }
    [Parameter] public EventCallback OnValidSubmit { get; set; }

    private List<Address>? Addresses;
    private Address resAddress;
    protected async override Task OnInitializedAsync()
    {
        Addresses = await _client.GetFromJsonAsync<List<Address>>($"{Endpoints.AddressesEndpoint}");
        resAddress = Addresses.First(q => q.Id == RestaurantApplication.AddressId);
    }
}

@page "/restaurantapplication/create"
@inject HttpClient _client
@inject NavigationManager _navManager

<div class="restaurant-form">

    <EditForm Model="@restaurantapplication" OnValidSubmit="CreateRestaurantApplication">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <div class="row justify-content-center">
            <h2 class="text-center">Tell us more about your restaurant!</h2>
        </div>

        <div class="row justify-content-center">
            
            <div class="mb-3 col-md-3 form-group">
                <label class="white-color">Restaurant Name:</label>
                <div>
                    <InputText @bind-Value="@restaurantapplication.RestaurantName" class="form-control" placeholder="Restaurant Name" />
                    <ValidationMessage For="@(() => restaurantapplication.RestaurantName)" />
                </div>
            </div>
            <div class="mb-3 col-md-3 form-group">
                <label class="white-color">Email: </label>
                <div>
                    <InputText @bind-Value="@restaurantapplication.Email" class="form-control" placeholder="Email" />
                    <ValidationMessage For="@(() => restaurantapplication.Email)" />
                </div>
            </div>
            <div class="mb-3 col-md-3 form-group">
                <label class="white-color">Cuisine:</label>
                <div>
                    <InputText @bind-Value="@restaurantapplication.Cuisine" class="form-control" placeholder="Cuisine eg.Chinese/Korea" />
                    <ValidationMessage For="@(() => restaurantapplication.Cuisine)" />
                </div>
            </div>
            <div class="mb-3 col-md-3 form-group">
                <label class="white-color">Category:</label>
                <div>
                    <InputText @bind-Value="@restaurantapplication.Category" class="form-control" placeholder="Category eg.Hotpot/BBQ" />
                    <ValidationMessage For="@(() => restaurantapplication.Category)" />
                </div>
            </div>
            <div class="mb-3 col-md-4 form-group">
                <label class="white-color">Location:</label>
                <div>
                    <InputSelect @bind-Value="@restaurantapplication.Location" class="form-control">
                        <option value="">-- Select Location --</option>
                        @foreach (var location in locationSelections)
                        {
                            <option>@location</option>
                        }
                    </InputSelect>
                </div>
            </div>

            <div class="mb-3 col-md-4 form-group">
                <label class="white-color">Phone Number: </label>
                <div>
                    <InputNumber @bind-Value="@restaurantapplication.PhoneNumber" class="form-control" placeholder="Phone Number : XXXXXXXX" />
                    <ValidationMessage For="@(() => restaurantapplication.PhoneNumber)" />
                </div>
            </div>
            <div class="mb-3 col-md-4 form-group">
                <label class="white-color">Image Path:</label>
                <div>
                    <InputText @bind-Value="@restaurantapplication.ImagePath" class="form-control" placeholder="Image Name eg.Image.jpg" />
                    <ValidationMessage For="@(() => restaurantapplication.ImagePath)" />
                </div>
            </div>
            <div class="mb-3 col-md-d form-group">
                <label class="white-color">Description:</label>
                <div>
                    <InputText @bind-Value="@restaurantapplication.Description" class="form-control" placeholder="Describe your restaurant" />
                    <ValidationMessage For="@(() => restaurantapplication.Description)" />
                </div>
            </div>
        </div>
        <div class="row justify-content-center">
            <h2 class="text-center">Restaurant Address</h2>
        </div>
        <div class="row justify-content-center">
            <div class="mb-3 col-md-6 form-group">
                <label class="white-color">Street Name:</label>
                <div>
                    <InputText @bind-Value="@newaddress.Street" class="form-control" placeholder="Street Name: eg. 2 Tampines Central 5" />
                    <ValidationMessage For="@(() => newaddress.Street)" />
                </div>
            </div>
            <div class="mb-3 col-md-6 form-group">
                <label class="white-color">Building Name:</label>
                <div>
                    <InputText @bind-Value="@newaddress.Building" class="form-control" placeholder="Building: eg. Century Square" />
                    <ValidationMessage For="@(() => newaddress.Building)" />
                </div>
            </div>
            <div class="mb-3 col-md-6 form-group">
                <label class="white-color">Level:</label>
                <div>
                    <InputNumber @bind-Value="@newaddress.Level" class="form-control" placeholder="Level: eg. 1" />
                    <ValidationMessage For="@(() => newaddress.Level)" />
                </div>
            </div>
            <div class="mb-3 col-md-6 form-group">
                <label class="white-color">Unit Number:</label>
                <div>
                    <InputText @bind-Value="@newaddress.UnitNumber" class="form-control" placeholder="Unit Number: eg. #02-22" />
                    <ValidationMessage For="@(() => newaddress.UnitNumber)" />
                </div>
            </div>
            <div class="mb-3 col-md-6 form-group">
                <label class="white-color">Postal Code:</label>
                <div>
                    <InputNumber @bind-Value="@newaddress.PostalCode" class="form-control" placeholder="Postal Code: eg. 529509" />
                    <ValidationMessage For="@(() => newaddress.PostalCode)" />
                </div>
            </div>
        </div>
        <div class="row justify-content-center">
            <h2 class="text-center">Menu</h2>
        </div>
        <div class="row justify-content-center">
            
            <div class="mb-3 col-md-6 form-group">
                <label class="white-color">Menu Image Path:</label>
                <div>
                    <InputText @bind-Value="@newMenu.ImagePath" class="form-control" placeholder="Image Name eg.Image.jpg" />
                    <ValidationMessage For="@(() => newMenu.ImagePath)" />
                </div>
            </div>
        </div>

        <div class="row justify-content-center">
            <div class="mb-3 col-md-6 form-group">
                <label class="white-color">Subscription Fees:</label>
                <div>
                    <InputSelect @bind-Value="@subscribe.PlatformFee" class="form-control">
                        <option value="">-- Select Plan --</option>
                        @foreach (var price in SubscribtionList)
                        {
                            <option>@price</option>
                        }
                    </InputSelect>
                </div>
            </div>
        </div>

        <div class="row justify-content-center">
            <h2 class="text-center">On days when the restaurant is closed, the opening and closing times should be identical.</h2>
        </div>

        <div class="row justify-content-center">
            <div class="row mb-3">
                <div class="col-md-6 form-group">
                    <label class="white-color">Monday Opening Time:</label>
                    <InputDate Type="InputDateType.Time" min="@DateTime.Today.ToString("yyyy-MM-dd")" @bind-Value="@monday.OpeningTime" class="form-control" />
                </div>
                <div class="col-md-6 form-group">
                    <label class="white-color">Monday Closing Time:</label>
                    <InputDate Type="InputDateType.Time" min="@DateTime.Today.ToString("yyyy-MM-dd")" @bind-Value="@monday.ClosingTime" class="form-control" />
                </div>
            </div>
            <div class="row mb-3">
                <div class="col-md-6 form-group">
                    <label class="white-color">Tuesday Opening Time:</label>
                    <InputDate Type="InputDateType.Time" min="@DateTime.Today.ToString("yyyy-MM-dd")" @bind-Value="@tuesday.OpeningTime" class="form-control" />
                </div>
                <div class="col-md-6 form-group">
                    <label class="white-color">Tuesday Closing Time:</label>
                    <InputDate Type="InputDateType.Time" min="@DateTime.Today.ToString("yyyy-MM-dd")" @bind-Value="@tuesday.ClosingTime" class="form-control" />
                </div>
            </div>
            <div class="row mb-3">
                <div class="col-md-6 form-group">
                    <label class="white-color">Wednesday Opening Time:</label>
                    <InputDate Type="InputDateType.Time" min="@DateTime.Today.ToString("yyyy-MM-dd")" @bind-Value="@wednesday.OpeningTime" class="form-control" />
                </div>
                <div class="col-md-6 form-group">
                    <label class="white-color">Wednesday Closing Time:</label>
                    <InputDate Type="InputDateType.Time" min="@DateTime.Today.ToString("yyyy-MM-dd")" @bind-Value="@wednesday.ClosingTime" class="form-control" />
                </div>
            </div>
            <div class="row mb-3">
                <div class="col-md-6 form-group">
                    <label class="white-color">Thursday Opening Time:</label>
                    <InputDate Type="InputDateType.Time" min="@DateTime.Today.ToString("yyyy-MM-dd")" @bind-Value="@thursday.OpeningTime" class="form-control" />
                </div>
                <div class="col-md-6 form-group">
                    <label class="white-color">Thursday Closing Time:</label>
                    <InputDate Type="InputDateType.Time" min="@DateTime.Today.ToString("yyyy-MM-dd")" @bind-Value="@thursday.ClosingTime" class="form-control" />
                </div>
            </div>
            <div class="row mb-3">
                <div class="col-md-6 form-group">
                    <label class="white-color">Friday Opening Time:</label>
                    <InputDate Type="InputDateType.Time" min="@DateTime.Today.ToString("yyyy-MM-dd")" @bind-Value="@friday.OpeningTime" class="form-control" />
                </div>
                <div class="col-md-6 form-group">
                    <label class="white-color">Friday Closing Time:</label>
                    <InputDate Type="InputDateType.Time" min="@DateTime.Today.ToString("yyyy-MM-dd")" @bind-Value="@friday.ClosingTime" class="form-control" />
                </div>
            </div>
            <div class="row mb-3">
                <div class="col-md-6 form-group">
                    <label class="white-color">Saturday Opening Time:</label>
                    <InputDate Type="InputDateType.Time" min="@DateTime.Today.ToString("yyyy-MM-dd")" @bind-Value="@saturday.OpeningTime" class="form-control" />
                </div>
                <div class="col-md-6 form-group">
                    <label class="white-color">Saturday Closing Time:</label>
                    <InputDate Type="InputDateType.Time" min="@DateTime.Today.ToString("yyyy-MM-dd")" @bind-Value="@saturday.ClosingTime" class="form-control" />
                </div>
            </div>
            <div class="row mb-3">
                <div class="col-md-6 form-group">
                    <label class="white-color">Sunday Opening Time:</label>
                    <InputDate Type="InputDateType.Time" min="@DateTime.Today.ToString("yyyy-MM-dd")" @bind-Value="@sunday.OpeningTime" class="form-control" />
                </div>
                <div class="col-md-6 form-group">
                    <label class="white-color">Sunday Closing Time:</label>
                    <InputDate Type="InputDateType.Time" min="@DateTime.Today.ToString("yyyy-MM-dd")" @bind-Value="@sunday.ClosingTime" class="form-control" />
                </div>
            </div>
        </div>

        <div class="row justify-content-center">
            <div class="col-md-auto py-2">
                <button style="width:712.5px" type="submit" class="btn btn-primary btn-block">Submit Application</button>
            </div>
        </div>
        <div class="row justify-content-center">
            <div class="col-md-auto py-2">
                <a style="width:712.5px" class="btn btn-secondary btn-block" href="/">Back</a>
            </div>
        </div>

    </EditForm>



    <img src="images/form.jpg" />

</div>

@code {
    RestaurantApplication restaurantapplication = new RestaurantApplication(); //done
    Address newaddress = new Address(); //created
    Menu newMenu = new Menu(); //created

    Subscription subscribe = new Subscription(); 

    OperatingHour monday = new OperatingHour();
    OperatingHour tuesday = new OperatingHour();
    OperatingHour wednesday = new OperatingHour();
    OperatingHour thursday = new OperatingHour();
    OperatingHour friday = new OperatingHour();
    OperatingHour saturday = new OperatingHour();
    OperatingHour sunday = new OperatingHour();

    private List<Address>? address;
    private List<Menu>? menu;
    private List<Subscription>? subscription;
    private List<OperatingHour>? operatinghour;

    List<int> SubscribtionList = new List<int> { 10, 15, 20 };
    List<string> locationSelections = new List<string> { "North", "South", "East", "West", "NorthEast", "NorthWest", "SouthEast", "SouthWest", "Central" };

    protected async override Task OnInitializedAsync()
    {
        address = await _client.GetFromJsonAsync<List<Address>>($"{Endpoints.AddressesEndpoint}");
        menu = await _client.GetFromJsonAsync<List<Menu>>($"{Endpoints.MenusEndpoint}");
        subscription = await _client.GetFromJsonAsync<List<Subscription>>($"{Endpoints.SubscriptionsEndpoint}");
        operatinghour = await _client.GetFromJsonAsync<List<OperatingHour>>($"{Endpoints.OperatingHoursEndpoint}");
    }

    private async Task CreateRestaurantApplication()
    {

        await _client.PostAsJsonAsync($"{Endpoints.AddressesEndpoint}", newaddress); //created
        await _client.PostAsJsonAsync($"{Endpoints.MenusEndpoint}", newMenu);
        await _client.PostAsJsonAsync($"{Endpoints.SubscriptionsEndpoint}", subscribe);

        monday.Day = "Monday";
        tuesday.Day = "Tuesday";
        wednesday.Day = "Wednesday";
        thursday.Day = "Thursday";
        friday.Day = "Friday";
        saturday.Day = "Saturday";
        sunday.Day = "Sunday";

        await _client.PostAsJsonAsync($"{Endpoints.OperatingHoursEndpoint}", monday);
        await _client.PostAsJsonAsync($"{Endpoints.OperatingHoursEndpoint}", tuesday);
        await _client.PostAsJsonAsync($"{Endpoints.OperatingHoursEndpoint}", wednesday);
        await _client.PostAsJsonAsync($"{Endpoints.OperatingHoursEndpoint}", thursday);
        await _client.PostAsJsonAsync($"{Endpoints.OperatingHoursEndpoint}", friday);
        await _client.PostAsJsonAsync($"{Endpoints.OperatingHoursEndpoint}", saturday);
        await _client.PostAsJsonAsync($"{Endpoints.OperatingHoursEndpoint}", sunday);

        restaurantapplication.AddressId = address?.LastOrDefault().Id + 1;
        restaurantapplication.MenuId = menu?.LastOrDefault().Id + 1;
        restaurantapplication.SubscriptionId = subscription?.LastOrDefault().Id + 1;
        restaurantapplication.OperatingHourId = operatinghour?.LastOrDefault().Id + 1; //binding monday foreign key to restaurant application


        restaurantapplication.Status = "Active";
        await _client.PostAsJsonAsync($"{Endpoints.RestaurantApplicationsEndpoint}", restaurantapplication);

        _navManager.NavigateTo("/");
    }


}



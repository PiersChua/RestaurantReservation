@page "/review/{id:int}"
@inject HttpClient _client
@inject IJSRuntime js
@inject NavigationManager Navigation
@attribute [Authorize]

@if (rev != null && res != null)
{
	<div>
		<div class="review-head">
			<h1><span class="oi bi bi-envelope-paper-fill"></span> @res.Name</h1>
			<button class="btn btn-primary" @onclick="Rate">Leave a feedback!</button>
		</div>
		@foreach (var review in rev)
		{
			<div class="ratings">
				@for(int i=0;i<review.Rating;i++)
				{
					<span class="bi bi-star-fill"></span>
				}
				<p>@review.Description</p>
			</div>
		}
	</div>
}

@code {
	[Parameter]
	public int id { get; set; }
	private List<Review>? Rev;
	private List<Review>? rev;
	private Restaurant? res;
	protected override async Task OnInitializedAsync()
	{
		Rev = await _client.GetFromJsonAsync<List<Review>>($"{Endpoints.ReviewsEndpoint}");
		res = await _client.GetFromJsonAsync<Restaurant>($"{Endpoints.RestaurantsEndpoint}/{id}");
		if(Rev != null)
		{
			rev = Rev.Where(q => q.RestaurantId == id).ToList();
		}
	}

	private void Rate()
	{
		Navigation.NavigateTo($"/reviews/create");
	}
}

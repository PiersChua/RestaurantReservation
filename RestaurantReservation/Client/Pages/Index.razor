@page "/"
@inject HttpClient _client
@inject IJSRuntime js
@inject NavigationManager Navigation
@attribute [Authorize]



<div class="hero">
	<img src="images/hero.jpg">
	<div class="overlay-text">
		<h4>Experience culinary excellence with us </h4>
		<h2>anywhere,everywhere</h2>
	</div>
</div>
@if (Restaurants != null)
{
	<h2 class="menu-title"><span class="oi oi-people grey-color"></span> Everyday Hotpot</h2>
	<div class="wrapper">
		@foreach (var restaurant in Restaurants)
		{
			if (restaurant.Category == "Hotpot")
			{
				<div class="item">
					<img src="@restaurant.ImagePath"/>
					<a onclick="@(() => Reserve(restaurant))">@restaurant.Name</a>
				</div>
			}
		}

	</div>

	<h2 class="menu-title"><span class="oi bi bi-fire red-color"></span> All-you-can-eat Buffet</h2>
	<div class="wrapper">
		<div class="item">Restaurant 1</div>
		<div class="item">Restaurant 2</div>
		<div class="item">Restaurant 3</div>
		<div class="item">Restaurant 4</div>
		<div class="item">Restaurant 5</div>
	</div>

	<h2 class="menu-title"><span class="oi bi bi-tags-fill green-color"></span> Amazing Deals</h2>
	<div class="wrapper">
		<div class="item">Restaurant 1</div>
		<div class="item">Restaurant 2</div>
		<div class="item">Restaurant 3</div>
		<div class="item">Restaurant 4</div>
		<div class="item">Restaurant 5</div>
	</div>
}
else
{
	<h1>Loading Restaurants.</h1>
}


@code{

	private List<Restaurant>? Restaurants;

	protected override async Task OnInitializedAsync()
	{
		Restaurants = await _client.GetFromJsonAsync<List<Restaurant>>($"{Endpoints.RestaurantsEndpoint}");
	}

	async Task Delete(int restaurantId)
	{
		if (Restaurants != null)
		{
			var restaurant = Restaurants.First(q => q.Id == restaurantId);
			var confirm = await js.InvokeAsync<bool>("confirm", $"Do you want to delete? {restaurant.Name}?");
			if (confirm)
			{
				await _client.DeleteAsync($"{Endpoints.RestaurantsEndpoint}/{restaurantId}");
				await OnInitializedAsync();
			}
		}
	}
	private void Reserve(Restaurant res)
	{
		if (Restaurants!=null)
			{
				string serializedObject = System.Text.Json.JsonSerializer.Serialize(res);
				Navigation.NavigateTo($"/reservation?data={Uri.EscapeDataString(serializedObject)}");
			}
	}

} 


@page "/paymentmethods"
@inject HttpClient _client
@inject NavigationManager navigation
@inject IJSRuntime _js

<div class="container">
  <main>
    <div class="py-5 text-center">
      <img src="/images/appIcon.png" width="200" height="200">
      <h2>App Wallet</h2>
      <p class="lead">Add your personal payment method by filling up your card details in the form below</p>
    </div>

    <div class="row g-5">
      <div class="col-md-7 col-lg-12">
          <h4 class="mb-3">Payment</h4>
            <div class="my-3">
                <div class="form-check">
                    <input id="credit" name="paymentMethod" type="radio" class="form-check-input" checked required>
                    <label class="form-check-label" for="credit">Credit card</label>
                </div>
                <div class="form-check">
                    <input id="debit" name="paymentMethod" type="radio" class="form-check-input" required>
                    <label class="form-check-label" for="debit">Debit card</label>
                </div>
                <div class="form-check">
                    <input id="paypal" name="paymentMethod" type="radio" class="form-check-input" required>
                    <label class="form-check-label" for="paypal">PayPal</label>
                </div>
            </div>
        <EditForm Model=@paymentMethod OnValidSubmit="CreatePaymentMethod">
            <DataAnnotationsValidator />
                <div class="row gy-3">
                    <div class="col-md-6">
                        <label for="cc-name" class="form-label">Name on card</label>
                        <InputText @bind-Value="paymentMethod.Name" class="form-control" />
                        <small class="text-body-secondary">Full name as displayed on card</small>
                        <ValidationMessage For="@(() => paymentMethod.Name)" />
                    </div>

                    <div class="col-md-6">
                        <label for="cc-number" class="form-label">Credit card number</label>
                        <InputText @bind-Value="paymentMethod.CardNumber" class="form-control" />
                        <small class="text-body-secondary">Ensure there's no spacing between the numbers</small>
                        <ValidationMessage For="@(() => paymentMethod.CardNumber)" />
                    </div>

                    <div class="col-md-3">
                        <label for="cc-expiration" class="form-label">Expiration</label>
                        <InputDate @bind-Value="paymentMethod.DateOfExpiry" class="form-control" />
                        <ValidationMessage For="@(() => paymentMethod.DateOfExpiry)" />
                    </div>

                    <div class="col-md-3">
                        <label for="cc-cvv" class="form-label">CVV</label>
                        <InputNumber @bind-Value="paymentMethod.CVV" class="form-control" />
                        <ValidationMessage For="@(() => paymentMethod.CVV)" />
                    </div>
                </div>
                <hr class="my-4">
                <button class="w-100 btn btn-primary btn-lg" type="submit">Add Payment!</button>
          </EditForm>
      </div>
    </div>
  </main>

  <footer class="my-5 pt-5 text-body-secondary text-center text-small">
    <p class="mb-1">&copy; 2023–2024 BookBite</p>
    <ul class="list-inline">
      <li class="list-inline-item"><a href="#">Privacy</a></li>
      <li class="list-inline-item"><a href="#">Terms</a></li>
      <li class="list-inline-item"><a href="#">Support</a></li>
    </ul>
  </footer>
</div>


    


@code{
    PaymentMethod paymentMethod = new PaymentMethod();

    private async Task CreatePaymentMethod()
    {
        await _client.PostAsJsonAsync($"{Endpoints.PaymentMethodsEndpoint}", paymentMethod);
        string prompted = await _js.InvokeAsync<string>("Payment Method created successfully!"); 
        navigation.NavigateTo("/");
    }
}
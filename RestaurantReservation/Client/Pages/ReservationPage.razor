@page "/reservation/{id:int}"
@inject HttpClient _client
@inject IJSRuntime js
@inject NavigationManager Navigation
@attribute [Authorize]

<div class="res-container">
	@if (restaurant != null)
	{
		<div class="res-hero">
			<h2>@restaurant.Name<span class="oi bi bi-bookmark-plus bookmark"></span></h2>
			<img src="@restaurant.ImagePath" />
			<button class="btn btn-secondary" @onclick="NavigateToReview"><span class="bi bi-star-fill"></span> View Ratings</button>
			<h2>Menu</h2>
			<button class="btn btn-secondary" @onclick="Reserve"><span class="bi bi-calendar-plus"></span> Reserve Now</button>
		</div>
		<div class="res-details">
		<h3>Restaurant Details</h3>
			<div class="details">
				<h4>Address</h4>
				<p>Street: @restaurant.Address?.Street<br />Building: @restaurant.Address?.Building<br />Level @restaurant.Address?.Level<br />Unit: @restaurant.Address?.UnitNumber<br />Postal Code: @restaurant.Address?.PostalCode</p>
			</div>
			<div class="details">
				<h4>Phone Number</h4>
				<p>@restaurant.PhoneNumber</p>
			</div>
			<div class="details">
				<h4>Cuisine</h4>
				<p>@restaurant.Cuisine</p>
			</div>
			<div class="details">
				<h4>Category</h4>
				<p>@restaurant.Category</p>
			</div>
		</div>
	}
</div>

@code {
	private Restaurant? restaurant;
	private List<Restaurant>? Restaurants;
	[Parameter]
	public int id { get; set; }
	protected async override Task OnInitializedAsync()
	{
		Restaurants = await _client.GetFromJsonAsync<List<Restaurant>>($"{Endpoints.RestaurantsEndpoint}");
		if (Restaurants != null)
		{
			restaurant = Restaurants.First(q => q.Id == id);
		}
	}
	private void NavigateToReview()
	{
		Navigation.NavigateTo($"/review/{id}");
	}
	private void Reserve()
	{
		Navigation.NavigateTo($"/reservation/create/{id}");
	}
	// protected override void OnInitialized()
	// {
	// 	// Get the current URL
	// 	var uri = new Uri(Navigation.Uri);

	// 	// Parse the query parameters
	// 	var query = uri.Query;
	// 	var queryString = System.Web.HttpUtility.ParseQueryString(query);

	// 	// Get the value of the "data" parameter
	// 	string serializedObject = queryString["data"];

	// 	// Deserialize the object if the value is not null or empty
	// 	if (!string.IsNullOrEmpty(serializedObject))
	// 	{
	// 		restaurant = System.Text.Json.JsonSerializer.Deserialize<Restaurant>(serializedObject);
	// }
	
	}
	

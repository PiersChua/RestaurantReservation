@inject NavigationManager Navigation
@inherits LayoutComponentBase
@inject HttpClient _client
@inject AuthenticationStateProvider AuthenticationStateProvider

<div class="page">

    <main>
        <div class="top-row adjust">
            <div>
                <a href="/"><img src="images/appIcon.png" id="logo"></a>
            </div>
            <form action="" class="searchbar">
                <input type="text" @bind="searchTerm" placeholder="Book a Reservation now!">
                <button type="submit" class="search" @onclick="Search"><img src="images/search.png"></button>
            </form>

            <AuthorizeView>
                <Authorized>
                    <div class="bell">
                        <a class="adjust-icon" href="#">
                            <span class="grey-color oi bi bi-bell-fill" aria-hidden="true"></span>
                            <span class="badge">@upcomingReservations</span>
                        </a>
                    </div>
                    <div>
                        <a class="adjust-icon" href="/paymentmethods">
                            <span class="grey-color oi bi bi-wallet-fill" aria-hidden="true"></span>
                        </a>
                    </div>
                    <div>
                        <a class="adjust-icon" href="authentication/profile">
                            <span class="grey-color oi oi-person" aria-hidden="true"></span>
                        </a>
                    </div>
               </Authorized>
                <NotAuthorized>
                    <div>
                        <a class="adjust-icon" href="authentication/register">
                            <span class="oi oi-person" aria-hidden="true"></span>
                        </a>
                    </div>
                </NotAuthorized>
            </AuthorizeView>
        </div>
        <div class= "navbar ps-5">
            <AuthorizeView>
                <Authorized>
                    <div class="nav-div">
                        <a class="nav-a" href="#" @onclick="BeginLogOut">
                            <span class="oi oi-account-logout" aria-hidden="true"></span> Log out
                        </a>
                    </div>
                </Authorized>
            </AuthorizeView>
            <div class="nav-div">
                <a class="nav-a" href="">
                    <span class="oi bi bi-house-fill" aria-hidden="true"></span> Home
                </a>
            </div>
            <div class="nav-div">
                <a class="nav-a" href="/restaurants">
                    <span class="oi oi-spreadsheet" aria-hidden="true"></span> Restaurants
                </a>
            </div>
            <div class="nav-div">
                <a class="nav-a" href="/reservations">
                    <span class="oi oi-calendar" aria-hidden="true"></span> Reservations
                </a>
            </div>
            <div class="nav-div">
                <a class="nav-a" href="/promotions">
                    <span class="oi bi bi-megaphone-fill" aria-hidden="true"></span> Promotions
                </a>
            </div>
            <div class="nav-div">
                <a class="nav-a" href="/favourites">
                    <span class="oi bi bi-suit-heart-fill" aria-hidden="true"></span> Favourites
                </a>
            </div>
            <div class="nav-div">
                <a class="nav-a" href="/more">
                    <span class="oi bi bi-three-dots" aria-hidden="true"></span> More
                </a>
            </div>
            <div class="nav-div">
                <a class="nav-a" href="/staff">
                    <span class="oi bi bi-" aria-hidden="true"></span> Staff
                </a>
            </div>

        </div>
        <div>
            @Body
        </div>

    </main>
</div>

@code{
    private bool collapseNavMenu = true;
    private int upcomingReservations;

    private string? NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }
    private void BeginLogOut()
    {
        Navigation.NavigateToLogout("authentication/logout");
    }

    private string searchTerm;
    private void Search()
    {
        // Use NavigationManager to navigate to the target page with the parameter
        Navigation.NavigateTo($"/restaurants/{Uri.EscapeDataString(searchTerm)}");
    }
    async Task<int> GetUpcomingReservationsCountAsync()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var username = authState.User.Identity.Name;
        var reservations = await _client.GetFromJsonAsync<List<Reservation>>(Endpoints.ReservationsEndpoint);
        //get upcoming reservations that are confirmed
        return reservations
            .Count(q => q.Username == username && q.Date.Date >= DateTime.Today && q.ReservationStatusId == 1);
    }
    protected override async Task OnInitializedAsync()
	{
        upcomingReservations = await GetUpcomingReservationsCountAsync();
	}

}
